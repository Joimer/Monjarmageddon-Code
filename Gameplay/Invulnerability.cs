using UnityEngine;

public class Invulnerability : MonoBehaviour {

    protected bool invulnerable = false;
    protected float flashSpeed = 0.03f;
    protected float lastTime = 0f;
    protected float timeLeft = 0f;
    protected Renderer render;
    private bool blinking = true;

    public void Awake() {
        render = GetComponent<Renderer>();
    }

    private void Update() {
        if (!GameState.isGameLocked && invulnerable) {
            timeLeft -= Time.deltaTime;
            if (timeLeft <= 0f) {
                StopInvulnerable();
            } else if (blinking) {
                lastTime += Time.deltaTime;
                if (lastTime >= flashSpeed) {
                    Blink();
                }
            }
        }
    }

    public bool IsInvulnerable() {
        return invulnerable;
    }

    public void SetInvulnerable(float time) {
        ActivateInvulnerability(time, true);
    }

    public void SetInvulnerableNoBlink(float time) {
        ActivateInvulnerability(time, false);
    }

    private void ActivateInvulnerability(float time, bool withBlink) {
        // If there's an invulnerability already active, check the duration.
        // If the duration left is shorter than the new one, the new one gets added.
        // Otherwise, ignore the new invulnerability, as the one still persists.
        if (invulnerable && timeLeft > time) {
            return;
        }
        if (invulnerable && timeLeft < time) {
            timeLeft += time - timeLeft;
        } else {
            invulnerable = true;
            timeLeft = time;
        }
        // This is added in case it was blinking, the renderer wasn't enabled,
        // and the overriding invulnerability is a not blinking one.
        render.enabled = true;
        blinking = withBlink;
    }

    public virtual void StopInvulnerable() {
        invulnerable = false;
        render.enabled = true;
        blinking = true;
        timeLeft = 0f;
    }

    public void Blink() {
        lastTime = 0f;
        render.enabled = !render.enabled;
    }
}
